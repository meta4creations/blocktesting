{"version":3,"file":"blocks/accordion-section/front.js","mappings":"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","sources":["webpack://mtphrblocktesting/./src/blocks/accordion-section/front.scss?0084","webpack://mtphrblocktesting/webpack/bootstrap","webpack://mtphrblocktesting/webpack/runtime/make namespace object","webpack://mtphrblocktesting/./src/blocks/accordion-section/front.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./front.scss\";\n\nconst block = `wp-block-block-testing-accordion-section`;\n\nconst expandSection = (sectionElement) => {\n  // Get the .accordion__body element within the section\n  const accordionBody = sectionElement.querySelector(`.${block}__body`);\n\n  if (accordionBody) {\n    // Measure the height of the content inside the .accordion__body\n    const contentHeight = accordionBody.scrollHeight;\n\n    // Add the \"open\" class to the .accordion__body\n    accordionBody.parentNode.classList.add(\"open\");\n\n    // Set the height of the .accordion__body to match the content height\n    accordionBody.style.height = `${contentHeight}px`;\n\n    // when the next css transition finishes (which should be the one we just triggered)\n    accordionBody.addEventListener(\"transitionend\", function (e) {\n      if (accordionBody.parentNode.classList.contains(\"open\")) {\n        accordionBody.style.height = \"\";\n      }\n    });\n  }\n};\n\nconst collapseSection = (sectionElement) => {\n  // Get the .accordion__body element within the section\n  const accordionBody = sectionElement.querySelector(`.${block}__body`);\n\n  if (accordionBody) {\n    // Remove the \"open\" class from the .accordion__body\n    accordionBody.parentNode.classList.remove(\"open\");\n\n    // Set the height of the .accordion__body to 0\n    const contentHeight = accordionBody.scrollHeight;\n    accordionBody.style.height = `${contentHeight}px`;\n    setTimeout(() => {\n      accordionBody.style.height = \"0\";\n    }, 10);\n  }\n};\n\n// Get the parent accordion element\nconst sectionNodes = document.querySelectorAll(`.${block}`);\nconst accordionSections =\n  sectionNodes instanceof NodeList ? Array.from(sectionNodes) : [sectionNodes];\n\n// Loop through each accordion section element\naccordionSections.forEach((sectionElement) => {\n  // Attach custom event listener to open event\n  sectionElement.addEventListener(\"open\", () => expandSection(sectionElement));\n\n  // Attach custom event listener to close event\n  sectionElement.addEventListener(\"close\", () =>\n    collapseSection(sectionElement)\n  );\n\n  // Get the .accordion__header element within the section\n  const accordionHeader = sectionElement.querySelector(`.${block}__header`);\n\n  // Add click listener to the .accordion__header\n  accordionHeader.addEventListener(\"click\", (event) => {\n    // Toggle the \"open\" class on the .accordion__body element\n    const accordionBody = sectionElement.querySelector(`.${block}__body`);\n\n    if (accordionBody) {\n      if (accordionBody.parentNode.classList.contains(\"open\")) {\n        collapseSection(sectionElement);\n      } else {\n        expandSection(sectionElement);\n\n        // Create a custom event with the section element as detail\n        const customEvent = new CustomEvent(\"sectionOpening\", {\n          detail: { sectionElement },\n        });\n\n        // Dispatch the custom event\n        sectionElement.parentNode.dispatchEvent(customEvent);\n      }\n    }\n  });\n});\n"],"names":["block","expandSection","sectionElement","accordionBody","querySelector","contentHeight","scrollHeight","parentNode","classList","add","style","height","addEventListener","e","contains","collapseSection","remove","setTimeout","sectionNodes","document","querySelectorAll","accordionSections","NodeList","Array","from","forEach","accordionHeader","event","customEvent","CustomEvent","detail","dispatchEvent"],"sourceRoot":""}