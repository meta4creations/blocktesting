{"version":3,"file":"blocks/accordion-section/index.js","mappings":"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","sources":["webpack://mtphrblocktesting/./src/blocks/accordion-section/edit.js","webpack://mtphrblocktesting/./src/blocks/accordion-section/save.js","webpack://mtphrblocktesting/./src/blocks/accordion-section/index.scss?aeae","webpack://mtphrblocktesting/external window \"React\"","webpack://mtphrblocktesting/external window [\"wp\",\"blockEditor\"]","webpack://mtphrblocktesting/external window [\"wp\",\"blocks\"]","webpack://mtphrblocktesting/external window [\"wp\",\"components\"]","webpack://mtphrblocktesting/external window [\"wp\",\"element\"]","webpack://mtphrblocktesting/external window [\"wp\",\"i18n\"]","webpack://mtphrblocktesting/webpack/bootstrap","webpack://mtphrblocktesting/webpack/runtime/compat get default export","webpack://mtphrblocktesting/webpack/runtime/define property getters","webpack://mtphrblocktesting/webpack/runtime/hasOwnProperty shorthand","webpack://mtphrblocktesting/webpack/runtime/make namespace object","webpack://mtphrblocktesting/./src/blocks/accordion-section/index.js"],"sourcesContent":["/*** IMPORTS ****************************************************************/\n\n// WordPress dependencies\nimport {} from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\nimport {\n  RichText,\n  InnerBlocks,\n  useBlockProps,\n  InspectorControls,\n  withColors,\n  PanelColorSettings,\n} from \"@wordpress/block-editor\";\nimport { useState } from \"@wordpress/element\";\n\n/*** CONSTANTS **************************************************************/\nconst ALLOWED_BLOCKS = [\n  \"core/paragraph\",\n  \"core/heading\",\n  \"core/image\",\n  \"core/list\",\n  \"core/quote\",\n  \"core/html\",\n  \"core/buttons\",\n  \"core/button\",\n  \"core/columns\",\n];\nconst BLOCK_TEMPLATE = [[\"core/paragraph\", {}]];\n\n/*** COMPONTANTS ************************************************************/\n\n/**\n * The editor for the block\n * @param {*} props\n * @returns {WPElement}\n */\nfunction Edit(props) {\n  const {\n    titleColor,\n    setTitleColor,\n    titleBackgroundColor,\n    setTitleBackgroundColor,\n    isSelected,\n    attributes: { title },\n    setAttributes,\n    open,\n    setState,\n  } = props;\n\n  const [showContent, setShowContent] = useState(false);\n\n  const block = `wp-block-block-testing-accordion-section`;\n  const blockProps = useBlockProps();\n\n  return (\n    <div {...blockProps}>\n      <InspectorControls>\n        <PanelColorSettings\n          title={__(\"Toggle Colors\", \"block-testing\")}\n          initialOpen={true}\n          colorSettings={[\n            {\n              value: titleColor.color,\n              onChange: setTitleColor,\n              label: __(\"Title Color\", \"block-testing\"),\n            },\n            {\n              value: titleBackgroundColor.color,\n              onChange: setTitleBackgroundColor,\n              label: __(\"Background Color\", \"block-testing\"),\n            },\n          ]}\n        />\n      </InspectorControls>\n      <div\n        className={`${block}__header`}\n        style={{\n          color: titleColor.color,\n          backgroundColor: titleBackgroundColor.color,\n        }}\n      >\n        <span\n          class={`${block}__header__icon`}\n          aria-hidden=\"true\"\n          onClick={() => setShowContent(!showContent)}\n          style={showContent ? { transform: \"rotate(180deg)\" } : null}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28.87 20.44\">\n            <path\n              d=\"M12.84.79c.8-1.06 2.39-1.06 3.19 0l12.43 16.44c1 1.32.06 3.21-1.59 3.21H2c-1.65 0-2.59-1.89-1.6-3.21L12.84.79Z\"\n              style={{ fill: \"currentColor\" }}\n            />\n          </svg>\n        </span>\n        <RichText\n          placeholder={__(\"Section Title\")}\n          tagName=\"h3\"\n          value={title}\n          onChange={(title) => setAttributes({ title })}\n          className={`${block}__title`}\n          style={{\n            color: titleColor.color,\n          }}\n        />\n      </div>\n      {showContent && (\n        <div className={`${block}__body`}>\n          <div className={`${block}__body__content`}>\n            <InnerBlocks\n              allowedBlocks={ALLOWED_BLOCKS}\n              template={BLOCK_TEMPLATE}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default withColors(\"titleColor\", \"titleBackgroundColor\")(Edit);\n","import { InnerBlocks, RichText, useBlockProps } from \"@wordpress/block-editor\";\n\nconst Save = (props) => {\n  const {\n    attributes: {\n      title,\n      titleColor,\n      customTitleColor,\n      titleBackgroundColor,\n      customTitleBackgroundColor,\n    },\n  } = props;\n\n  const block = `wp-block-block-testing-accordion-section`;\n\n  let headerClasses = `${block}__header`;\n  if (titleColor) {\n    headerClasses += ` has-${titleColor}-color`;\n  }\n  if (titleBackgroundColor) {\n    headerClasses += ` has-${titleBackgroundColor}-background-color`;\n  }\n\n  let headerStyles = {};\n  if (customTitleColor) {\n    headerStyles.color = customTitleColor;\n  }\n  if (customTitleBackgroundColor) {\n    headerStyles.backgroundColor = customTitleBackgroundColor;\n  }\n\n  const blockProps = useBlockProps.save();\n\n  return (\n    <section {...blockProps}>\n      <header className={headerClasses} style={headerStyles}>\n        <span class={`${block}__header__icon`} aria-hidden=\"true\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28.87 20.44\">\n            <path\n              d=\"M12.84.79c.8-1.06 2.39-1.06 3.19 0l12.43 16.44c1 1.32.06 3.21-1.59 3.21H2c-1.65 0-2.59-1.89-1.6-3.21L12.84.79Z\"\n              style={{ fill: \"currentColor\" }}\n            />\n          </svg>\n        </span>\n        <RichText.Content\n          tagName=\"h3\"\n          className={`${block}__header__title`}\n          value={title}\n        />\n      </header>\n      <main className={`${block}__body`} style={{ height: 0 }}>\n        <div className={`${block}__body__content`}>\n          <InnerBlocks.Content />\n        </div>\n      </main>\n    </section>\n  );\n};\n\n/*** EXPORTS ****************************************************************/\nexport default Save;\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nimport Save from \"./save\";\nimport metadata from \"./block.json\";\n//import { preformatted as icon } from \"@wordpress/icons\";\nimport \"./index.scss\";\n\nregisterBlockType(metadata, {\n\tedit: Edit,\n\tsave: Save,\n});\n"],"names":["__","RichText","InnerBlocks","useBlockProps","InspectorControls","withColors","PanelColorSettings","useState","ALLOWED_BLOCKS","BLOCK_TEMPLATE","Edit","props","titleColor","setTitleColor","titleBackgroundColor","setTitleBackgroundColor","isSelected","attributes","title","setAttributes","open","setState","showContent","setShowContent","block","blockProps","createElement","initialOpen","colorSettings","value","color","onChange","label","className","style","backgroundColor","class","onClick","transform","xmlns","viewBox","d","fill","placeholder","tagName","allowedBlocks","template","Save","customTitleColor","customTitleBackgroundColor","headerClasses","headerStyles","save","Content","height","registerBlockType","metadata","edit"],"sourceRoot":""}