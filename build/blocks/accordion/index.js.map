{"version":3,"file":"blocks/accordion/index.js","mappings":"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","sources":["webpack://mtphrblocktesting/./src/blocks/accordion/controls/index.js","webpack://mtphrblocktesting/./src/blocks/accordion/controls/inspector.js","webpack://mtphrblocktesting/./src/blocks/accordion/controls/toolbar.js","webpack://mtphrblocktesting/./src/blocks/accordion/edit.js","webpack://mtphrblocktesting/./src/blocks/accordion/save.js","webpack://mtphrblocktesting/./src/blocks/accordion/index.scss","webpack://mtphrblocktesting/external window \"React\"","webpack://mtphrblocktesting/external window [\"wp\",\"blockEditor\"]","webpack://mtphrblocktesting/external window [\"wp\",\"blocks\"]","webpack://mtphrblocktesting/external window [\"wp\",\"components\"]","webpack://mtphrblocktesting/external window [\"wp\",\"i18n\"]","webpack://mtphrblocktesting/webpack/bootstrap","webpack://mtphrblocktesting/webpack/runtime/compat get default export","webpack://mtphrblocktesting/webpack/runtime/define property getters","webpack://mtphrblocktesting/webpack/runtime/hasOwnProperty shorthand","webpack://mtphrblocktesting/webpack/runtime/make namespace object","webpack://mtphrblocktesting/./src/blocks/accordion/index.js"],"sourcesContent":["// WordPress dependencies\nimport { Fragment } from 'react';\nimport { BlockControls } from '@wordpress/block-editor';\n\n// Local Dependencies\n// Inspector - used for controls in inspector \nimport Inspector from './inspector'\n\n// Toolbar - used for controls in toolbar \nimport Toolbar from './toolbar'\n\n/*** CONSTANTS **************************************************************/\n\nconst Controls = props => {\n  return (\n    <Fragment>\n      <BlockControls>\n        <Toolbar {...props} />\n      </BlockControls>\n      <Inspector {...props} />\n    </Fragment>\n  )\n}\n\n/*** EXPORTS ****************************************************************/\n\nexport default Controls","/*** IMPORTS ****************************************************************/\n\n// WordPress dependencies\nimport { __ } from \"@wordpress/i18n\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { Panel, PanelBody, ToggleControl } from \"@wordpress/components\";\n\n// Local dependencies\n\n/*** CONSTANTS **************************************************************/\n\n/*** COMPONENTS **************************************************************/\n\nconst Inspector = (props) => {\n  const { attributes, setAttributes } = props;\n\n  return (\n    <InspectorControls>\n      <Panel>\n        <PanelBody title=\"Options\">\n          <ToggleControl\n            label={__(\"Open first item on page load?\")}\n            help={__(attributes.openFirstItem ? \"ON\" : \"OFF\")}\n            checked={attributes.openFirstItem}\n            onChange={() => {\n              setAttributes({ openFirstItem: !attributes.openFirstItem });\n            }}\n          />\n          <ToggleControl\n            label={__(\"Limit to one item open at a time?\")}\n            help={__(attributes.autoCloseOthers ? \"ON\" : \"OFF\")}\n            checked={attributes.autoCloseOthers}\n            onChange={() => {\n              setAttributes({ autoCloseOthers: !attributes.autoCloseOthers });\n            }}\n          />\n        </PanelBody>\n      </Panel>\n    </InspectorControls>\n  );\n};\n\nexport default Inspector;\n","/*** IMPORTS ****************************************************************/\n\n// WordPress Dependencies\nimport { __ } from \"@wordpress/i18n\";\nimport { Button, Toolbar } from \"@wordpress/components\";\n\n/*** COMPONENTS **************************************************************/\n\nconst TogglePreview = (props) => {\n  const { attributes, setAttributes } = props;\n\n  const isEditing = attributes.mode === \"edit\";\n\n  const onClick = () => {\n    setAttributes({ mode: isEditing ? \"preview\" : \"edit\" });\n  };\n\n  const PreviewButton = (\n    <Button\n      label={__(\"Preview\", \"block-testing\")}\n      icon=\"visibility\"\n      onClick={onClick}\n    />\n  );\n\n  const EditButton = (\n    <Button label={__(\"Edit\", \"block-testing\")} icon=\"edit\" onClick={onClick} />\n  );\n\n  return isEditing ? PreviewButton : EditButton;\n};\n\nconst Tools = (props) => {\n  return (\n    <Toolbar>\n      <TogglePreview {...props} />\n    </Toolbar>\n  );\n};\n\n/*** EXPORTS ****************************************************************/\n\nexport default Tools;\n","/*** IMPORTS ****************************************************************/\n\n// WordPress dependencies\nimport {} from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks, useBlockProps } from \"@wordpress/block-editor\";\n\n// Local Dependencies\nimport Controls from \"./controls\";\n\n/*** CONSTANTS **************************************************************/\nconst ALLOWED_BLOCKS = [\"block-testing/accordion-section\"];\nconst BLOCK_TEMPLATE = [[\"block-testing/accordion-section\", {}]];\n\n/*** COMPONTANTS ************************************************************/\n\n/**\n * The editor for the block\n * @param {*} props\n * @returns {WPElement}\n */\nconst Editor = (props) => {\n  const blockProps = useBlockProps();\n\n  return (\n    <div {...blockProps}>\n      <InnerBlocks allowedBlocks={ALLOWED_BLOCKS} template={BLOCK_TEMPLATE} />\n    </div>\n  );\n};\n\nconst edit = (props) => {\n  return (\n    <>\n      <Controls {...props} />\n      <Editor {...props} />\n    </>\n  );\n};\n\n/*** EXPORTS ****************************************************************/\n\nexport default edit;\n","import { InnerBlocks, useBlockProps } from \"@wordpress/block-editor\";\n\nconst Save = ({ attributes, className }) => {\n\tconst { openFirstItem, autoCloseOthers } = attributes;\n\tconst blockProps = useBlockProps.save();\n\n\treturn (\n\t\t<section\n\t\t\t{...blockProps}\n\t\t\tdata-openFirstItem={openFirstItem}\n\t\t\tdata-autoCloseOthers={autoCloseOthers}\n\t\t>\n\t\t\t<InnerBlocks.Content />\n\t\t</section>\n\t);\n};\n\n/*** EXPORTS ****************************************************************/\nexport default Save;\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nimport Save from \"./save\";\nimport metadata from \"./block.json\";\n//import { preformatted as icon } from \"@wordpress/icons\";\nimport \"./index.scss\";\n\nregisterBlockType(metadata, {\n\tedit: Edit,\n\tsave: Save,\n});\n"],"names":["Fragment","BlockControls","Inspector","Toolbar","Controls","props","createElement","__","InspectorControls","Panel","PanelBody","ToggleControl","attributes","setAttributes","title","label","help","openFirstItem","checked","onChange","autoCloseOthers","Button","TogglePreview","isEditing","mode","onClick","PreviewButton","icon","EditButton","Tools","InnerBlocks","useBlockProps","ALLOWED_BLOCKS","BLOCK_TEMPLATE","Editor","blockProps","allowedBlocks","template","edit","Save","className","save","Content","registerBlockType","Edit","metadata"],"sourceRoot":""}